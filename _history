{"entries":[{"timestamp":1731460778866,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"ck=\""],[-1,"止まる\"\n    export function fo9(): void {\n        cuteBot.stopcar();        \n    }\n}namespace custom {\n    //%block=\"すぐにすすむ"],[1,"はやく反応"],[0,"\"\n  "]],"start1":1116,"start2":1116,"length1":128,"length2":13}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"470"],[1,"552"],[0,"\" y=\""],[-1,"50"],[1,"153"],[0,"\"><v"]],"start1":1022,"start2":1022,"length1":18,"length2":19},{"diffs":[[0," x=\""],[-1,"8"],[1,"6"],[0,"\" y=\"47"],[-1,"1"],[1,"0"],[0,"\"><f"]],"start1":1520,"start2":1520,"length1":17,"length2":17},{"diffs":[[0," type=\"custom_fo"],[-1,"9"],[1,"4"],[0,"\"></block></next"]],"start1":2010,"start2":2010,"length1":33,"length2":33},{"diffs":[[0,"ustom_fo"],[-1,"6"],[1,"o"],[0,"\"></bloc"]],"start1":2295,"start2":2295,"length1":17,"length2":17},{"diffs":[[0,"s\"><"],[-1,"next><block type=\"custom_fo9\"></block></next><"],[0,"/blo"]],"start1":2402,"start2":2402,"length1":54,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ustom.fo"],[-1,"9"],[1,"4"],[0,"()\n     "]],"start1":471,"start2":471,"length1":17,"length2":17},{"diffs":[[0,"m.fo"],[-1,"6"],[1,"o"],[0,"()\n "]],"start1":581,"start2":581,"length1":9,"length2":9},{"diffs":[[0,"s()\n"],[-1,"    custom.fo9()\n"],[0,"})\n"]],"start1":631,"start2":631,"length1":24,"length2":7}]}]},{"timestamp":1731461288512,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0," }\n}"],[-1,"\nnamespace custom {\n    //%block=\"すぐにうしろに\"\n    export function fo10(): void {\n        cuteBot.motors(-30, -30);\n    }\n}\n"],[0,"name"]],"start1":1197,"start2":1197,"length1":128,"length2":8},{"diffs":[[0,"0);\n"],[-1,"        basic.pause(50)\n"],[0,"    "]],"start1":1304,"start2":1304,"length1":32,"length2":8}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"39"],[1,"0"],[0,"\" y=\""],[-1,"5"],[0,"0\"><"]],"start1":111,"start2":111,"length1":16,"length2":14},{"diffs":[[0," x=\""],[-1,"682"],[1,"470"],[0,"\" y=\""],[-1,"79"],[1,"50"],[0,"\"><v"]],"start1":1022,"start2":1022,"length1":18,"length2":18},{"diffs":[[0,"m_fo"],[-1,"10"],[1,"9"],[0,"\"></"]],"start1":2021,"start2":2021,"length1":10,"length2":9}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"m.fo"],[-1,"10"],[1,"9"],[0,"()\n "]],"start1":475,"start2":475,"length1":10,"length2":9}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":540,"start2":540,"length1":17,"length2":21}]}]},{"timestamp":1731461886950,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"   \n"],[-1,"        basic.pause(200);\n"],[0,"    }\n"],[1,""],[0,"}\nna"]],"start1":1190,"start2":1190,"length1":40,"length2":14},{"diffs":[[0,"rs(-"],[-1,"8"],[1,"3"],[0,"0, -"],[-1,"80);\n        basic.pause(5"],[1,"3"],[0,"0);\n"],[-1,"\n"],[0,"    "]],"start1":1299,"start2":1299,"length1":44,"length2":18},{"diffs":[[0,"0, 30);\n"],[-1,""],[0,"        "],[1,"basic.pause(50)"],[0,"\n    }\n}"]],"start1":1420,"start2":1420,"length1":24,"length2":39}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"0"],[1,"39"],[0,"\" y=\""],[1,"5"],[0,"0\"><"]],"start1":111,"start2":111,"length1":14,"length2":16},{"diffs":[[0,"x=\"6"],[-1,"43"],[1,"82"],[0,"\" y=\""],[-1,"2"],[1,"7"],[0,"9\"><"]],"start1":1025,"start2":1025,"length1":16,"length2":16},{"diffs":[[0," x=\""],[-1,"17"],[1,"8"],[0,"\" y=\"4"],[-1,"5"],[0,"7"],[1,"1"],[0,"\"><f"]],"start1":1521,"start2":1521,"length1":18,"length2":17},{"diffs":[[0,"0\"><"],[-1,"next><block type=\"custom_fo9\"></block></next><"],[0,"/blo"]],"start1":2028,"start2":2028,"length1":54,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"0()\n"],[-1,"            custom.fo9()\n"],[0,"    "]],"start1":480,"start2":480,"length1":33,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".ts\""],[-1,",\n        \"main.py\""],[0,"\n   "]],"start1":265,"start2":265,"length1":27,"length2":8}]},{"type":"added","filename":"main.py","value":"def on_button_pressed_a():\n    for index in range(3000):\n        if cuteBot.kyori():\n            cuteBot.color_light(cuteBot.RGBLights.ALL, 0xff0000)\n        else:\n            cuteBot.closeheadlights()\n    cuteBot.closeheadlights()\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    for index2 in range(3000):\n        if cuteBot.kyori():\n            cuteBot.closeheadlights()\n            custom.fo10()\n            custom.fo9()\n        else:\n            cuteBot.color_light(cuteBot.RGBLights.ALL, 0xff0000)\n            custom.fo6()\n    cuteBot.closeheadlights()\n    custom.fo9()\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n"}]},{"timestamp":1731462485196,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"まる\"\n"],[-1,"    export function fo11(): void {\n        cuteBot.stopcar();\n        \n    }\n}namespace custom {\n    //%block=\"わずかに止まる\"\n"],[0,"    "]],"start1":1121,"start2":1121,"length1":128,"length2":8}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ent\""],[-1," id=\"gjHY[HxklG9ym%8EfS!^\""],[0," x=\""]],"start1":107,"start2":107,"length1":34,"length2":8},{"diffs":[[0,"ext\""],[-1," id=\"F)eUx5wbIzVOx6NgyrS%\""],[0,"><va"]],"start1":214,"start2":214,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"OuzT}F:46mo~~{`n1;XZ\""],[0,"><fi"]],"start1":267,"start2":267,"length1":34,"length2":8},{"diffs":[[0,"_if\""],[-1," id=\"{fy?HpfT%WY?C!IU/n92\""],[0,"><mu"]],"start1":361,"start2":361,"length1":34,"length2":8},{"diffs":[[0,"ean\""],[-1," id=\")):PDeeKpQtwE$:@nU*#\""],[0,"><fi"]],"start1":438,"start2":438,"length1":34,"length2":8},{"diffs":[[0,"ori\""],[-1," id=\"mvja+cy#oRNyC+3leSP|\""],[0,"></b"]],"start1":506,"start2":506,"length1":34,"length2":8},{"diffs":[[0,"ght\""],[-1," id=\"h*dzYo)*b%rpC-!G9qD}\""],[0,"><fi"]],"start1":577,"start2":577,"length1":34,"length2":8},{"diffs":[[0,"ker\""],[-1," id=\"OOT;`N#A,@5Bj^nI2Lwe\""],[0,"><fi"]],"start1":679,"start2":679,"length1":34,"length2":8},{"diffs":[[0,"hts\""],[-1," id=\"Ju*%9x*]8{z9x]BG*b6M\""],[0,"></b"]],"start1":813,"start2":813,"length1":34,"length2":8},{"diffs":[[0,"hts\""],[-1," id=\"#Z{_*5xaQ*{+W%,oW)fd\""],[0,"></b"]],"start1":897,"start2":897,"length1":34,"length2":8},{"diffs":[[0,"_if\""],[-1," id=\"Pm,^1;Wc2r}[nkQb~ub6\""],[0," dis"]],"start1":966,"start2":966,"length1":34,"length2":8},{"diffs":[[0,"ean\""],[-1," id=\")%j]/.CDxV1r9s]}u_OD\""],[0," dis"]],"start1":1080,"start2":1080,"length1":34,"length2":8},{"diffs":[[0,"on2\""],[-1," id=\")YPcq-uz?|TrWIgy(_+?\""],[0," dis"]],"start1":1190,"start2":1190,"length1":34,"length2":8},{"diffs":[[0,"car\""],[-1," id=\"LCss1^(*Qvq1nJM]yYSp\""],[0," dis"]],"start1":1330,"start2":1330,"length1":34,"length2":8},{"diffs":[[0,"ord\""],[-1," id=\"8%~(Ee:~hNq?0=FHf%GB\""],[0," dis"]],"start1":1401,"start2":1401,"length1":34,"length2":8},{"diffs":[[0,"ent\""],[-1," id=\"*opS(!K?ESi7@)ev01Up\""],[0," x=\""]],"start1":1515,"start2":1515,"length1":34,"length2":8},{"diffs":[[0,"ext\""],[-1," id=\"kzFZ(rx;gZ61SD|=h,IM\""],[0,"><va"]],"start1":1625,"start2":1625,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"j^gJ5}#^*p-2DE~ntDcF\""],[0,"><fi"]],"start1":1678,"start2":1678,"length1":34,"length2":8},{"diffs":[[0,"_if\""],[-1," id=\"Z@FY7rSE`tEZu1|M3_Tw\""],[0,"><mu"]],"start1":1772,"start2":1772,"length1":34,"length2":8},{"diffs":[[0,"ean\""],[-1," id=\"?AF7hI%$nz2_?,g5mxkH\""],[0,"><fi"]],"start1":1849,"start2":1849,"length1":34,"length2":8},{"diffs":[[0,"ori\""],[-1," id=\"UhiXZ3dU|PD.ADlK?_)P\""],[0,"></b"]],"start1":1917,"start2":1917,"length1":34,"length2":8},{"diffs":[[0,"hts\""],[-1," id=\"faKR]q4+4H.pjPO+FjK]\""],[1,"><next><block type=\"custom_fo10\"><next><block type=\"custom_fo9\"></block></next></block></next"],[0,"></b"]],"start1":1993,"start2":1993,"length1":34,"length2":101},{"diffs":[[0,"ght\""],[-1," id=\"R#_aSBsO0~R-kUt2N.6$\""],[0,"><fi"]],"start1":2162,"start2":2162,"length1":34,"length2":8},{"diffs":[[0,"ker\""],[-1," id=\"z0dbr5+9cYESXEZII+$E\""],[0,"><fi"]],"start1":2264,"start2":2264,"length1":34,"length2":8},{"diffs":[[0,"ue><"],[-1,"/block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\" id=\"zvnu?PsT0;u|ZaftSC$V\"></block></next></block></statement></block><block type=\"custom_fo10\" id=\"|QL8T9eR1?Kv.3XDceEn\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"632\" y=\"672\"></block><block type=\"custom_fo9\" id=\"i_.Df7aF$Ps0/3M,x4*[\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"645\" y=\"819\"></block><block type=\"custom_fo6\" id=\"i$GjG/Cej,%AO{[BgUh.\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"665\" y=\"978\"></block><block type=\"custom_fo9\" id=\"bYUKb2F%4Mk2*~NrWU3D\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"402\" y=\"999\""],[1,"next><block type=\"custom_fo6\"></block></next></block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\"><next><block type=\"custom_fo9\"></block></next></block></next></block></statement"],[0,"></b"]],"start1":2319,"start2":2319,"length1":660,"length2":217}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"oseheadlights()\n"],[1,"            custom.fo10()\n            custom.fo9()\n"],[0,"        } else {"]],"start1":442,"start2":442,"length1":32,"length2":83},{"diffs":[[0,".ALL, 0xff0000)\n"],[1,"            custom.fo6()\n"],[0,"        }\n    }\n"]],"start1":574,"start2":574,"length1":32,"length2":57},{"diffs":[[0,"  cuteBot.closeheadlights()\n"],[1,"    custom.fo9()\n"],[0,"})\n"]],"start1":633,"start2":633,"length1":31,"length2":48}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":292,"start2":292,"length1":52,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":559,"start2":559,"length1":21,"length2":17}]},{"type":"added","filename":"test.ts","value":"// テストはここに来ます。このパッケージが拡張機能として使用されるときにはコンパイルされません。\n"}]}],"snapshots":[{"timestamp":1731460778865,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_button_event\" x=\"0\" y=\"0\"><field name=\"NAME\">Button.A</field><statement name=\"HANDLER\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3000</field></shadow></value><statement name=\"DO\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"cuteBot_kyori\"></block></value><statement name=\"DO0\"><block type=\"cuteBot_colorLight\"><field name=\"light\">cuteBot.RGBLights.ALL</field><value name=\"color\"><shadow type=\"colorNumberPicker\"><field name=\"value\">0xff0000</field></shadow></value></block></statement><statement name=\"ELSE\"><block type=\"cuteBot_closeheadlights\"></block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\"></block></next></block></statement></block><block type=\"controls_if\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"552\" y=\"153\"><value name=\"IF0\"><shadow type=\"logic_boolean\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"device_get_button2\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"NAME\">Button.B</field></block></value><statement name=\"DO0\"><block type=\"cutebot_stopcar\" disabled-reasons=\"MANUALLY_DISABLED\"><next><block type=\"break_keyword\" disabled-reasons=\"MANUALLY_DISABLED\"></block></next></block></statement></block><block type=\"device_button_event\" x=\"6\" y=\"470\"><field name=\"NAME\">Button.B</field><statement name=\"HANDLER\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3000</field></shadow></value><statement name=\"DO\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"cuteBot_kyori\"></block></value><statement name=\"DO0\"><block type=\"cuteBot_closeheadlights\"><next><block type=\"custom_fo4\"></block></next></block></statement><statement name=\"ELSE\"><block type=\"cuteBot_colorLight\"><field name=\"light\">cuteBot.RGBLights.ALL</field><value name=\"color\"><shadow type=\"colorNumberPicker\"><field name=\"value\">0xff0000</field></shadow></value><next><block type=\"custom_foo\"></block></next></block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\"></block></next></block></statement></block></xml>","main.ts":"","README.md":"","cutebot.ts":"/**\n * Functions to Cutebot by ELECFREAKS Co.,Ltd.\n */\n\n//% weight=5 color=#0fbc11  icon=\"\\uf207\" \n//%color=#0fbc11  block=\"むずかしい\"\nnamespace cuteBot {\n    const STM8_ADDRESSS = 0x10\n    let _initEvents = true\n    /**\n    * Unit of Ultrasound Module\n    */\n    export enum SonarUnit {\n        //% block=\"cm\"\n        Centimeters,\n        //% block=\"inches\"\n        Inches\n    }\n    /**\n    * Select the motor on the left or right\n    */\n    export enum MotorsList {\n        //% blockId=\"M1\" block=\"M1\"\n        M1 = 0,\n        //% blockId=\"M2\" block=\"M2\"\n        M2 = 1\n    }\n    /**\n    * Select the servo on the S1 or S2\n    */\n    export enum ServoList {\n        //% block=\"S1\"\n        S1 = 0,\n        //% block=\"S2\"\n        S2 = 1\n    }\n    /**\n    * Select the RGBLights on the left or right\n    */\n    export enum RGBLights {\n        //% blockId=\"Right_RGB\" block=\"右LED\"\n        RGB_L = 1,\n        //% blockId=\"Left_RGB\" block=\"左LED\"\n        RGB_R = 0,\n        //% blockId=\"ALL\" block=\"全て\"\n        ALL = 3\n    }\n    /**\n    * Status List of Tracking Modules\n    */\n    export enum TrackingState {\n        //% block=\"● ●\" enumval=0\n        L_R_line,\n\n        //% block=\"◌ ●\" enumval=1\n        L_unline_R_line,\n\n        //% block=\"● ◌\" enumval=2\n        L_line_R_unline,\n\n        //% block=\"◌ ◌\" enumval=3\n        L_R_unline\n    }\n    export enum Direction {\n        //% block=\"Forward\" enumval=0\n        forward,\n        //% block=\"Backward\" enumval=1\n        backward,\n        //% block=\"Left\" enumval=2\n        left,\n        //% block=\"Right\" enumval=3\n        right\n    }\n    /**\n    * Line Sensor events    MICROBIT_PIN_EVT_RISE\n    */\n    export enum MbEvents {\n        //% block=\"Found\" \n        FindLine = DAL.MICROBIT_PIN_EVT_FALL,\n        //% block=\"Lost\" \n        LoseLine = DAL.MICROBIT_PIN_EVT_RISE\n    }\n    /**\n     * Pins used to generate events\n     */\n    export enum MbPins {\n        //% block=\"Left\" \n        Left = DAL.MICROBIT_ID_IO_P13,\n        //% block=\"Right\" \n        Right = DAL.MICROBIT_ID_IO_P14\n    }\n    /**\n     * TODO: Set the speed of left and right wheels. \n     * @param lspeed Left wheel speed , eg: 30\n     * @param rspeed Right wheel speed, eg: 30\n     */\n    //% blockId=MotorRun block=\"左タイヤの速さ %lspeed\\\\% 右タイヤの速さ %rspeed\\\\%\"\n    //% lspeed.min=-50 lspeed.max=50\n    //% rspeed.min=-50 rspeed.max=50\n    //% weight=100\n    export function motors(lspeed: number = 50, rspeed: number = 50): void {\n        let buf = pins.createBuffer(4);\n        if (lspeed > 50) {\n            lspeed = 50;\n        } else if (lspeed < -50) {\n            lspeed = -50;\n        }\n        if (rspeed > 50) {\n            rspeed = 50;\n        } else if (rspeed < -50) {\n            rspeed = -50;\n        }\n        if (lspeed > 0) {\n            buf[0] = 0x01;    //左右轮 0x01左轮  0x02右轮\n            buf[1] = 0x02;\t\t//正反转0x02前进  0x01后退\n            buf[2] = lspeed;\t//速度\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        else {\n            buf[0] = 0x01;\n            buf[1] = 0x01;\n            buf[2] = lspeed * -1;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        if (rspeed > 0) {\n            buf[0] = 0x02;\n            buf[1] = 0x02;\n            buf[2] = rspeed;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        else {\n            buf[0] = 0x02;\n            buf[1] = 0x01;\n            buf[2] = rspeed * -1;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n\n    }\n    /**\n    * TODO: stopcar\n    */\n    //% blockId=cutebot_stopcar block=\"止まる\"\n    //% weight=70\n    export function stopcar(): void {\n        motors(0, 0)\n    }\n    /**\n    * TODO: Set LED headlights.\n    */\n    //% block=\"%lightのヘッドライトを $color色で点灯する\"\n    //% color.shadow=\"colorNumberPicker\"\n    //% weight=65\n    export function colorLight(light: RGBLights, color: number) {\n        let r: number, g: number, b: number = 0\n        r = color >> 16\n        g = (color >> 8) & 0xFF\n        b = color & 0xFF\n        singleheadlights(light, r, g, b)\n    }\n    /**\n    * TODO: Select a headlights and set the RGB color.\n    * @param R R color value of RGB color, eg: 0\n    * @param G G color value of RGB color, eg: 128\n    * @param B B color value of RGB color, eg: 255\n    */\n    //% inlineInputMode=inline\n    //% blockId=RGB block=\"%light のヘッドライトを　赤:%r 緑:%g 青:%bで点灯する\"\n    //% r.min=0 r.max=255\n    //% g.min=0 g.max=255\n    //% b.min=0 b.max=255\n    //% weight=60\n    export function singleheadlights(light: RGBLights, r: number, g: number, b: number): void {\n        let buf = pins.createBuffer(4);\n        if (light == 3) {\n            buf[0] = 0x04;\n            buf[1] = r;\n            buf[2] = g;\n            buf[3] = b;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n            buf[0] = 0x08;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        }\n        else {\n            if (light == 0) {\n                buf[0] = 0x04;\n            }\n            if (light == 1) {\n                buf[0] = 0x08;\n            }\n            buf[1] = r;\n            buf[2] = g;\n            buf[3] = b;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        }\n\n    }\n    /**\n    * Close all headlights.\n    */\n    //% inlineInputMode=inline\n    //% block=\"ヘッドライトを消す\"\n    //% weight=55\n    export function closeheadlights(): void {\n        let buf = pins.createBuffer(4);\n        buf[0] = 0x04;\n        buf[1] = 0;\n        buf[2] = 0;\n        buf[3] = 0;\n        pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        buf[0] = 0x08;\n        pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n    }\n\n    /**\n    * Judging the Current Status of Tracking Module. \n    * @param state Four states of tracking module, eg: TrackingState.L_R_line\n    */\n    //% blockId=ringbitcar_tracking block=\"ライントレースセンサが %state\"\n    //% weight=50\n    export function tracking(state: TrackingState): boolean {\n        pins.setPull(DigitalPin.P13, PinPullMode.PullNone)\n        pins.setPull(DigitalPin.P14, PinPullMode.PullNone)\n        let left_tracking = pins.digitalReadPin(DigitalPin.P13);\n        let right_tracking = pins.digitalReadPin(DigitalPin.P14);\n        if (left_tracking == 0 && right_tracking == 0 && state == 0) {\n            return true;\n        }\n        else if (left_tracking == 1 && right_tracking == 0 && state == 1) {\n            return true;\n        }\n        else if (left_tracking == 0 && right_tracking == 1 && state == 2) {\n            return true;\n        }\n        else if (left_tracking == 1 && right_tracking == 1 && state == 3) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    //% block=\"15cmより近い\"\n    //% weight=52\n\n    export function kyori(): boolean {\n        let dis = cuteBot.ultrasonic(cuteBot.SonarUnit.Centimeters)\n        if (dis < 15 && dis > 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n\n    //% block=\"30cmより近い\"\n    //% weight=51\n\n    export function kyori2(): boolean {\n        let dis = cuteBot.ultrasonic(cuteBot.SonarUnit.Centimeters)\n        if (dis < 30 && dis > 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n\n\n    /**\n    * Cars can extend the ultrasonic function to prevent collisions and other functions.. \n    * @param Sonarunit two states of ultrasonic module, eg: Centimeters\n    */\n    //% blockId=ultrasonic block=\"超音波センサの値 %unit\"\n    //% weight=35\n    export function ultrasonic(unit: SonarUnit, maxCmDistance = 500): number {\n        // send pulse\n        pins.setPull(DigitalPin.P8, PinPullMode.PullNone);\n        pins.digitalWritePin(DigitalPin.P8, 0);\n        control.waitMicros(2);\n        pins.digitalWritePin(DigitalPin.P8, 1);\n        control.waitMicros(10);\n        pins.digitalWritePin(DigitalPin.P8, 0);\n        // read pulse\n        const d = pins.pulseIn(DigitalPin.P12, PulseValue.High, maxCmDistance * 50);\n        switch (unit) {\n            case SonarUnit.Centimeters:\n                return Math.floor(d * 9 / 6 / 58);\n            case SonarUnit.Inches:\n                return Math.floor(d * 9 / 6 / 148);\n            default:\n                return d;\n        }\n    }\n\n}\n","custom.ts":"\n/**\n * カスタムブロック\n */\n//% weight=100 color=#0fbc11 icon=\"/UF076\"\n//%color=#ff8800 block=\"かんたん\"\n\nnamespace custom {\n    //%block=\"左に曲がる\"\n    export function fo3(): void {\n        cuteBot.motors(-30, 30);\n        basic.pause(300);\n        cuteBot.stopcar()\n        basic.pause(500);\n    }\n}\n\nnamespace custom {\n    //%block=\"右に曲がる\"\n    export function fo7(): void {\n        cuteBot.motors(30, -30);\n        basic.pause(300);\n        cuteBot.stopcar()\n        basic.pause(500);\n    }\n}\n\nnamespace custom {\n    //%block=\"後にもどる\"\n    export function fo1(): void {\n        cuteBot.motors(-30, -30);\n        basic.pause(500);\n        cuteBot.stopcar()\n    }\n}\n\nnamespace custom {\n    //%block=\"前に進む\"\n    export function foo(): void {\n        cuteBot.motors(30, 30);\n        basic.pause(500);\n        cuteBot.stopcar()\n    }\n}\nnamespace custom {\n    //%block=\"1秒止まる\"\n    export function fo4(): void {\n        cuteBot.stopcar()\n        basic.pause(1000);\n    }\n}\nnamespace custom {\n    //%block=\"2秒止まる\"\n    export function fo5(): void {\n        cuteBot.stopcar()\n        basic.pause(2000);\n    }\n}\nnamespace custom {\n    //%block=\"はやく反応\"\n    export function fo6(): void {\n        cuteBot.motors(30, 30);\n    }\n}\nnamespace custom {\n    //%block=\"線を調べて前進\"\n    export function fo8(): void {\n        if (cuteBot.tracking(cuteBot.TrackingState.L_R_unline)) {\n            cuteBot.motors(20, 20)\n        } else {\n            cuteBot.motors(-30, -30)\n            basic.pause(500)\n            cuteBot.motors(30, -30)\n            basic.pause(400)\n            cuteBot.stopcar()\n            basic.pause(500);\n\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"CUTE de 探究2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"cutebot.ts\",\n        \"custom.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v5.0.6\",\n        \"tag\": \"v5.0.6\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/a7b22b445e8aebdca9d19b7fb2250d11b06e8009\",\n        \"target\": \"5.0.6\",\n        \"pxt\": \"8.0.3\"\n    },\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1731462635794,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_button_event\" x=\"0\" y=\"0\"><field name=\"NAME\">Button.A</field><statement name=\"HANDLER\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3000</field></shadow></value><statement name=\"DO\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"cuteBot_kyori\"></block></value><statement name=\"DO0\"><block type=\"cuteBot_colorLight\"><field name=\"light\">cuteBot.RGBLights.ALL</field><value name=\"color\"><shadow type=\"colorNumberPicker\"><field name=\"value\">0xff0000</field></shadow></value></block></statement><statement name=\"ELSE\"><block type=\"cuteBot_closeheadlights\"></block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\"></block></next></block></statement></block><block type=\"controls_if\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"643\" y=\"29\"><value name=\"IF0\"><shadow type=\"logic_boolean\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"device_get_button2\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"NAME\">Button.B</field></block></value><statement name=\"DO0\"><block type=\"cutebot_stopcar\" disabled-reasons=\"MANUALLY_DISABLED\"><next><block type=\"break_keyword\" disabled-reasons=\"MANUALLY_DISABLED\"></block></next></block></statement></block><block type=\"device_button_event\" x=\"17\" y=\"457\"><field name=\"NAME\">Button.B</field><statement name=\"HANDLER\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3000</field></shadow></value><statement name=\"DO\"><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"cuteBot_kyori\"></block></value><statement name=\"DO0\"><block type=\"cuteBot_closeheadlights\"><next><block type=\"custom_fo10\"><next><block type=\"custom_fo9\"></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"cuteBot_colorLight\"><field name=\"light\">cuteBot.RGBLights.ALL</field><value name=\"color\"><shadow type=\"colorNumberPicker\"><field name=\"value\">0xff0000</field></shadow></value><next><block type=\"custom_fo6\"></block></next></block></statement></block></statement><next><block type=\"cuteBot_closeheadlights\"><next><block type=\"custom_fo9\"></block></next></block></next></block></statement></block></xml>","main.ts":"input.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 3000; index++) {\n        if (cuteBot.kyori()) {\n            cuteBot.colorLight(cuteBot.RGBLights.ALL, 0xff0000)\n        } else {\n            cuteBot.closeheadlights()\n        }\n    }\n    cuteBot.closeheadlights()\n})\ninput.onButtonPressed(Button.B, function () {\n    for (let index = 0; index < 3000; index++) {\n        if (cuteBot.kyori()) {\n            cuteBot.closeheadlights()\n            custom.fo10()\n            custom.fo9()\n        } else {\n            cuteBot.colorLight(cuteBot.RGBLights.ALL, 0xff0000)\n            custom.fo6()\n        }\n    }\n    cuteBot.closeheadlights()\n    custom.fo9()\n})\n","README.md":"","cutebot.ts":"/**\n * Functions to Cutebot by ELECFREAKS Co.,Ltd.\n */\n\n//% weight=5 color=#0fbc11  icon=\"\\uf207\" \n//%color=#0fbc11  block=\"むずかしい\"\nnamespace cuteBot {\n    const STM8_ADDRESSS = 0x10\n    let _initEvents = true\n    /**\n    * Unit of Ultrasound Module\n    */\n    export enum SonarUnit {\n        //% block=\"cm\"\n        Centimeters,\n        //% block=\"inches\"\n        Inches\n    }\n    /**\n    * Select the motor on the left or right\n    */\n    export enum MotorsList {\n        //% blockId=\"M1\" block=\"M1\"\n        M1 = 0,\n        //% blockId=\"M2\" block=\"M2\"\n        M2 = 1\n    }\n    /**\n    * Select the servo on the S1 or S2\n    */\n    export enum ServoList {\n        //% block=\"S1\"\n        S1 = 0,\n        //% block=\"S2\"\n        S2 = 1\n    }\n    /**\n    * Select the RGBLights on the left or right\n    */\n    export enum RGBLights {\n        //% blockId=\"Right_RGB\" block=\"右LED\"\n        RGB_L = 1,\n        //% blockId=\"Left_RGB\" block=\"左LED\"\n        RGB_R = 0,\n        //% blockId=\"ALL\" block=\"全て\"\n        ALL = 3\n    }\n    /**\n    * Status List of Tracking Modules\n    */\n    export enum TrackingState {\n        //% block=\"● ●\" enumval=0\n        L_R_line,\n\n        //% block=\"◌ ●\" enumval=1\n        L_unline_R_line,\n\n        //% block=\"● ◌\" enumval=2\n        L_line_R_unline,\n\n        //% block=\"◌ ◌\" enumval=3\n        L_R_unline\n    }\n    export enum Direction {\n        //% block=\"Forward\" enumval=0\n        forward,\n        //% block=\"Backward\" enumval=1\n        backward,\n        //% block=\"Left\" enumval=2\n        left,\n        //% block=\"Right\" enumval=3\n        right\n    }\n    /**\n    * Line Sensor events    MICROBIT_PIN_EVT_RISE\n    */\n    export enum MbEvents {\n        //% block=\"Found\" \n        FindLine = DAL.MICROBIT_PIN_EVT_FALL,\n        //% block=\"Lost\" \n        LoseLine = DAL.MICROBIT_PIN_EVT_RISE\n    }\n    /**\n     * Pins used to generate events\n     */\n    export enum MbPins {\n        //% block=\"Left\" \n        Left = DAL.MICROBIT_ID_IO_P13,\n        //% block=\"Right\" \n        Right = DAL.MICROBIT_ID_IO_P14\n    }\n    /**\n     * TODO: Set the speed of left and right wheels. \n     * @param lspeed Left wheel speed , eg: 30\n     * @param rspeed Right wheel speed, eg: 30\n     */\n    //% blockId=MotorRun block=\"左タイヤの速さ %lspeed\\\\% 右タイヤの速さ %rspeed\\\\%\"\n    //% lspeed.min=-50 lspeed.max=50\n    //% rspeed.min=-50 rspeed.max=50\n    //% weight=100\n    export function motors(lspeed: number = 50, rspeed: number = 50): void {\n        let buf = pins.createBuffer(4);\n        if (lspeed > 50) {\n            lspeed = 50;\n        } else if (lspeed < -50) {\n            lspeed = -50;\n        }\n        if (rspeed > 50) {\n            rspeed = 50;\n        } else if (rspeed < -50) {\n            rspeed = -50;\n        }\n        if (lspeed > 0) {\n            buf[0] = 0x01;    //左右轮 0x01左轮  0x02右轮\n            buf[1] = 0x02;\t\t//正反转0x02前进  0x01后退\n            buf[2] = lspeed;\t//速度\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        else {\n            buf[0] = 0x01;\n            buf[1] = 0x01;\n            buf[2] = lspeed * -1;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        if (rspeed > 0) {\n            buf[0] = 0x02;\n            buf[1] = 0x02;\n            buf[2] = rspeed;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n        else {\n            buf[0] = 0x02;\n            buf[1] = 0x01;\n            buf[2] = rspeed * -1;\n            buf[3] = 0;\t\t\t//补位\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);  //写入左轮\n        }\n\n    }\n    /**\n    * TODO: stopcar\n    */\n    //% blockId=cutebot_stopcar block=\"止まる\"\n    //% weight=70\n    export function stopcar(): void {\n        motors(0, 0)\n    }\n    /**\n    * TODO: Set LED headlights.\n    */\n    //% block=\"%lightのヘッドライトを $color色で点灯する\"\n    //% color.shadow=\"colorNumberPicker\"\n    //% weight=65\n    export function colorLight(light: RGBLights, color: number) {\n        let r: number, g: number, b: number = 0\n        r = color >> 16\n        g = (color >> 8) & 0xFF\n        b = color & 0xFF\n        singleheadlights(light, r, g, b)\n    }\n    /**\n    * TODO: Select a headlights and set the RGB color.\n    * @param R R color value of RGB color, eg: 0\n    * @param G G color value of RGB color, eg: 128\n    * @param B B color value of RGB color, eg: 255\n    */\n    //% inlineInputMode=inline\n    //% blockId=RGB block=\"%light のヘッドライトを　赤:%r 緑:%g 青:%bで点灯する\"\n    //% r.min=0 r.max=255\n    //% g.min=0 g.max=255\n    //% b.min=0 b.max=255\n    //% weight=60\n    export function singleheadlights(light: RGBLights, r: number, g: number, b: number): void {\n        let buf = pins.createBuffer(4);\n        if (light == 3) {\n            buf[0] = 0x04;\n            buf[1] = r;\n            buf[2] = g;\n            buf[3] = b;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n            buf[0] = 0x08;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        }\n        else {\n            if (light == 0) {\n                buf[0] = 0x04;\n            }\n            if (light == 1) {\n                buf[0] = 0x08;\n            }\n            buf[1] = r;\n            buf[2] = g;\n            buf[3] = b;\n            pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        }\n\n    }\n    /**\n    * Close all headlights.\n    */\n    //% inlineInputMode=inline\n    //% block=\"ヘッドライトを消す\"\n    //% weight=55\n    export function closeheadlights(): void {\n        let buf = pins.createBuffer(4);\n        buf[0] = 0x04;\n        buf[1] = 0;\n        buf[2] = 0;\n        buf[3] = 0;\n        pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n        buf[0] = 0x08;\n        pins.i2cWriteBuffer(STM8_ADDRESSS, buf);\n    }\n\n    /**\n    * Judging the Current Status of Tracking Module. \n    * @param state Four states of tracking module, eg: TrackingState.L_R_line\n    */\n    //% blockId=ringbitcar_tracking block=\"ライントレースセンサが %state\"\n    //% weight=50\n    export function tracking(state: TrackingState): boolean {\n        pins.setPull(DigitalPin.P13, PinPullMode.PullNone)\n        pins.setPull(DigitalPin.P14, PinPullMode.PullNone)\n        let left_tracking = pins.digitalReadPin(DigitalPin.P13);\n        let right_tracking = pins.digitalReadPin(DigitalPin.P14);\n        if (left_tracking == 0 && right_tracking == 0 && state == 0) {\n            return true;\n        }\n        else if (left_tracking == 1 && right_tracking == 0 && state == 1) {\n            return true;\n        }\n        else if (left_tracking == 0 && right_tracking == 1 && state == 2) {\n            return true;\n        }\n        else if (left_tracking == 1 && right_tracking == 1 && state == 3) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    //% block=\"15cmより近い\"\n    //% weight=52\n\n    export function kyori(): boolean {\n        let dis = cuteBot.ultrasonic(cuteBot.SonarUnit.Centimeters)\n        if (dis < 15 && dis > 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n\n    //% block=\"30cmより近い\"\n    //% weight=51\n\n    export function kyori2(): boolean {\n        let dis = cuteBot.ultrasonic(cuteBot.SonarUnit.Centimeters)\n        if (dis < 30 && dis > 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n\n\n    /**\n    * Cars can extend the ultrasonic function to prevent collisions and other functions.. \n    * @param Sonarunit two states of ultrasonic module, eg: Centimeters\n    */\n    //% blockId=ultrasonic block=\"超音波センサの値 %unit\"\n    //% weight=35\n    export function ultrasonic(unit: SonarUnit, maxCmDistance = 500): number {\n        // send pulse\n        pins.setPull(DigitalPin.P8, PinPullMode.PullNone);\n        pins.digitalWritePin(DigitalPin.P8, 0);\n        control.waitMicros(2);\n        pins.digitalWritePin(DigitalPin.P8, 1);\n        control.waitMicros(10);\n        pins.digitalWritePin(DigitalPin.P8, 0);\n        // read pulse\n        const d = pins.pulseIn(DigitalPin.P12, PulseValue.High, maxCmDistance * 50);\n        switch (unit) {\n            case SonarUnit.Centimeters:\n                return Math.floor(d * 9 / 6 / 58);\n            case SonarUnit.Inches:\n                return Math.floor(d * 9 / 6 / 148);\n            default:\n                return d;\n        }\n    }\n\n}\n","custom.ts":"\n/**\n * カスタムブロック\n */\n//% weight=100 color=#0fbc11 icon=\"/UF076\"\n//%color=#ff8800 block=\"かんたん\"\n\nnamespace custom {\n    //%block=\"左に曲がる\"\n    export function fo3(): void {\n        cuteBot.motors(-30, 30);\n        basic.pause(300);\n        cuteBot.stopcar()\n        basic.pause(500);\n    }\n}\n\nnamespace custom {\n    //%block=\"右に曲がる\"\n    export function fo7(): void {\n        cuteBot.motors(30, -30);\n        basic.pause(300);\n        cuteBot.stopcar()\n        basic.pause(500);\n    }\n}\n\nnamespace custom {\n    //%block=\"後にもどる\"\n    export function fo1(): void {\n        cuteBot.motors(-30, -30);\n        basic.pause(500);\n        cuteBot.stopcar()\n    }\n}\n\nnamespace custom {\n    //%block=\"前に進む\"\n    export function foo(): void {\n        cuteBot.motors(30, 30);\n        basic.pause(500);\n        cuteBot.stopcar()\n    }\n}\nnamespace custom {\n    //%block=\"1秒止まる\"\n    export function fo4(): void {\n        cuteBot.stopcar()\n        basic.pause(1000);\n    }\n}\nnamespace custom {\n    //%block=\"2秒止まる\"\n    export function fo5(): void {\n        cuteBot.stopcar()\n        basic.pause(2000);\n    }\n}\nnamespace custom {\n    //%block=\"止まる\"\n    export function fo9(): void {\n        cuteBot.stopcar();        \n        basic.pause(200);\n    }\n}\nnamespace custom {\n    //%block=\"すぐにうしろに\"\n    export function fo10(): void {\n        cuteBot.motors(-80, -80);\n        basic.pause(50);\n\n    }\n}\nnamespace custom {\n    //%block=\"すぐにすすむ\"\n    export function fo6(): void {\n        cuteBot.motors(30, 30);\n        \n    }\n}\nnamespace custom {\n    //%block=\"線を調べて前進\"\n    export function fo8(): void {\n        if (cuteBot.tracking(cuteBot.TrackingState.L_R_unline)) {\n            cuteBot.motors(20, 20)\n        } else {\n            cuteBot.motors(-30, -30)\n            basic.pause(500)\n            cuteBot.motors(30, -30)\n            basic.pause(400)\n            cuteBot.stopcar()\n            basic.pause(500);\n\n        }\n    }\n}\n","main.py":"def on_button_pressed_a():\n    for index in range(3000):\n        if cuteBot.kyori():\n            cuteBot.color_light(cuteBot.RGBLights.ALL, 0xff0000)\n        else:\n            cuteBot.closeheadlights()\n    cuteBot.closeheadlights()\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ndef on_button_pressed_b():\n    for index2 in range(3000):\n        if cuteBot.kyori():\n            cuteBot.closeheadlights()\n            custom.fo10()\n            custom.fo9()\n        else:\n            cuteBot.color_light(cuteBot.RGBLights.ALL, 0xff0000)\n            custom.fo6()\n    cuteBot.closeheadlights()\n    custom.fo9()\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n","pxt.json":"{\n    \"name\": \"CUTE de 探究2\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"cutebot.ts\",\n        \"custom.ts\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v5.0.6\",\n        \"tag\": \"v5.0.6\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/a7b22b445e8aebdca9d19b7fb2250d11b06e8009\",\n        \"target\": \"5.0.6\",\n        \"pxt\": \"8.0.3\"\n    },\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1731462825090}